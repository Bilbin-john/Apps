openapi: 3.0.0
info:
  title: Student API
  description: CRUD operations for managing student data
  version: 1.0.0
servers:
- url: https://34.49.242.191.nip.io/functionapp
paths:
  /students:
    get:
      summary: Get all students
      operationId: getAllStudents
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example: |
                [
                  { "id": 1, "name": "John Doe", "age": 20 },
                  { "id": 2, "name": "Jane Smith", "age": 22 }
                ]
    post:
      summary: Create a new student
      operationId: createStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/students_body'
        required: true
      responses:
        "201":
          description: Student created successfully
          content:
            application/json:
              example: |
                { "id": 1, "name": "John Doe", "age": 20 }
  /students/{studentId}:
    get:
      summary: Get a student by ID
      operationId: getStudentById
      parameters:
      - name: studentId
        in: path
        description: ID of the student
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example: |
                { "id": 1, "name": "John Doe", "age": 20 }
        "404":
          description: Student not found
    put:
      summary: Update a student by ID
      operationId: updateStudent
      parameters:
      - name: studentId
        in: path
        description: ID of the student to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/students_studentId_body'
        required: true
      responses:
        "200":
          description: Student updated successfully
          content:
            application/json:
              example: |
                { "id": 1, "name": "John Doe", "age": 21 }
        "404":
          description: Student not found
    delete:
      summary: Delete a student by ID
      operationId: deleteStudent
      parameters:
      - name: studentId
        in: path
        description: ID of the student to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Student deleted successfully
        "404":
          description: Student not found
components:
  schemas:
    students_body:
      type: object
      properties:
        name:
          type: string
          description: Name of the student
          example: John Doe
        age:
          type: integer
          description: Age of the student
          example: 20
    students_studentId_body:
      type: object
      properties:
        name:
          type: string
          description: Updated name of the student
          example: John Doe
        age:
          type: integer
          description: Updated age of the student
          example: 21
